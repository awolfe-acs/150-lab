@use './reset' as *;
@use './layout' as *;
@use './utilities' as *;
@use './animation' as *;
@use './components/background' as *;
@use './components/header' as *;
@use './components/buttons' as *;
@use './components/countdown' as *;
@use './components/video' as *;
@use './components/section-timeline' as *;
@use './components/nav' as *;
@use './components/cards' as *;
@use './components/events-panel' as *;
@use './components/form-panel' as *;
@use './components/footer-bar' as *;
@use './typography' as *;



// Fix for Lenis scrolling past the bottom
html, body {
  min-height: 100%;
  height: 100%;
  overscroll-behavior: none; // Prevent bouncing on some browsers
  overflow-y: scroll; // Force scrollbar visibility
  margin: 0; // Ensure no margin creates gap with scrollbar
  padding: 0; // Ensure no padding creates gap with scrollbar

  #bd, #maincontent {
    width: 100% !important;
  }

  span.mejs__offscreen {
    display: none !important;
  }

  a {
    text-decoration: none !important;
    transition: all 0.3s ease, outline-color 0s;
    color: #fff;

    &:not(.secondary-btn, .fancy-btn, .page-nav-link) {
      transition: all 0.3s ease, outline-color 0s !important;
    }

    &:hover {
      color: #fff;
    }

    &:focus, &:hover, &:active {
      outline: none !important;

      &:not(:focus-visible) {
        outline: none !important;
      }
    }
  }
}

html.lenis {
  height: auto; // Override Lenis default
  // Ensure content doesn't cause overflow beyond intended
  overflow: auto; // Changed from 'hidden' to 'auto' to keep scrollbar
  scrollbar-width: thin; // For Firefox
  scrollbar-gutter: stable; // Prevent layout shift when scrollbar appears/disappears

  // Ensure touch events work properly with Lenis
  &.lenis-smooth {
    scroll-behavior: auto; // Let Lenis handle smooth scrolling
  }
}

html {
  background: #060E15;
  overflow-x: hidden !important;
  // Ensure touch scrolling works on mobile
  -webkit-overflow-scrolling: touch;
  touch-action: manipulation; // Allow all touch gestures

  // Custom scrollbar styling for webkit browsers to match thin scrollbar
  &::-webkit-scrollbar {
    width: 8px; // Thin scrollbar width
  }

  &::-webkit-scrollbar-track {
    background: transparent; // Match background
  }

  &::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.2); // Subtle white for dark theme
    border-radius: 4px;

    &:hover {
      background: rgba(255, 255, 255, 0.3);
    }
  }

  ::selection {
    background: #0029cf7f;
  }

  *,
  *:before,
  *:after {
    //font-family: "Plus Jakarta Sans", sans-serif;
    //font-family: "Poppins", sans-serif;
    font-family: "Open Sans", sans-serif;
    font-style: normal;
    color: #fff;
  }

  body {
    width: 100vw;
    min-width: calc(100vw + 5px);
    max-width: 100%; // Prevent horizontal overflow
    background: #060E15;
    color: #fff;
    font-family: sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    isolation: isolate;
    overflow-x: hidden;
    margin: 0; // Remove any default margin
    padding: 0; // Remove any default padding
    box-sizing: border-box; // Include padding and border in width calculation
    // Ensure touch scrolling works on mobile
    -webkit-overflow-scrolling: touch;
    touch-action: manipulation; // Allow all touch gestures for better touch response

    button, a {
      @include keyboard-focus;
    }

    // Ensure main container allows touch events
    #app {
      touch-action: manipulation;
      -webkit-overflow-scrolling: touch;
    }
  }

}

// Mobile-specific touch optimizations
@media (max-width: 768px) {
  html, body {
    // Optimize for mobile touch scrolling
    -webkit-overflow-scrolling: touch;
    overscroll-behavior: none;

    // Ensure touch events work properly
    touch-action: manipulation;
  }

  // Ensure all sections allow touch scrolling
  section {
    touch-action: manipulation;
  }

  // Ensure fixed elements don't interfere with touch
  *[style*="position: fixed"],
  .fixed {
    touch-action: none;
    pointer-events: none;

    // Re-enable pointer events for interactive elements
    &.interactive,
    button,
    a,
    input,
    select,
    textarea {
      pointer-events: auto;
      touch-action: manipulation;
    }
  }
}

// Mobile-specific touch optimizations
@media (max-width: 768px) {
  html, body {
    // Optimize for mobile touch scrolling
    -webkit-overflow-scrolling: touch;
    overscroll-behavior: none;

    // Ensure touch events work properly
    touch-action: manipulation;
  }

  // Ensure all sections allow touch scrolling
  section {
    touch-action: manipulation;
  }

  // Ensure fixed elements don't interfere with touch
  *[style*="position: fixed"],
  .fixed {
    touch-action: none;
    pointer-events: none;

    // Re-enable pointer events for interactive elements
    &.interactive,
    button,
    a,
    input,
    select,
    textarea {
      pointer-events: auto;
      touch-action: manipulation;
    }
  }
}


//Hero Area
#hero-area {
  pointer-events: none;

  h1, span {
    cursor: default;
  }

  h1 {
    font-size: 4vw;
    text-align: center;
    font-weight: 200;
    width: 60vw;
    position: absolute;
    z-index: 5;
    perspective: 1000px; // Add perspective to parent for 3D effect

    @media (max-width:$mobile-viewport) {
      width: 98vw;
      font-size: 7vw;
    }

    @media (min-width:2600px) {
      font-size: 104px;
    }

    // Styles for SplitType
    .word {
      display: inline-block;
      margin-right: 0.25em; // Space between words
      white-space: nowrap; // Prevent words from breaking
    }

    .char {
      display: inline-block;
      position: relative;
      // Ensure characters maintain proper spacing
      margin: 0;
      padding: 0;
      // Add a subtle transform for more dynamic appearance
      transform-origin: center center;
      transform-style: preserve-3d; // Enhance 3D effect
      will-change: opacity, transform; // Optimize for animation
      font-weight: 150;
    }
  }

  #hero-number {
    font-size: 26vw;
    z-index: 2;
    letter-spacing: -0.5vw;
    opacity: 0;
    position: relative;
    display: flex;
    justify-content: center;

    @media (max-width:$mobile-viewport) {
      font-size: 34vw;
    }

    @media (min-width:2600px) {
      font-size: 675px;
    }

    // Style for each digit
    .digit {
      position: relative;
      color: rgba(251, 225, 57, 0.66);
      transform-style: preserve-3d;
      -webkit-text-stroke: 1px rgba(255, 240, 143, 0.7);
      font-weight: 800;
      transition: color 0.1s ease;
      line-height: 1.52;
      user-select: none;
      opacity: 0.44;
      filter: drop-shadow(0px 0px 4px rgba(251, 225, 57, 0.9)) drop-shadow(0px 0px 8px rgba(251, 225, 57, 0.4));

      @media (max-width:$desktop-viewport) {
        -webkit-text-stroke: 0.5px rgba(255, 240, 143, 0.66);
      }
    }

    // Style for digit overlay during transitions
    .digit-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      color: rgba(251, 225, 57, 0.9);
      // Add matching border to overlay
      //-webkit-text-stroke: 1px rgba(255, 255, 255, 0.3);
      //text-stroke: 1px rgba(255, 255, 255, 0.3);
      transition: color 0.1s ease;
    }
  }

  button.enter-experience {
    bottom: 20dvh;
    position: absolute;
    pointer-events: auto;

    @media (min-width:1600px) {
      bottom: 14dvh;
    }
  }
}

#get-involved {

  @media (max-width:$mobile-viewport) {
    padding-top: 4vh;
  }

  .get-involved-header {
    display: flex;
    flex-direction: column;
    gap: 40px;
    padding: 20vh 0;
    //transform: translateY(12dvh);

    @media (max-width:$mobile-viewport) {
      transform: translateY(0);
      gap: 16px;
    }

    h2 {
      text-shadow: 0px 2px 4px rgba(0, 0, 0, 0.16), 0px 2px 8px rgba(0, 0, 0, 0.12), 0px 2px 12px rgba(0, 0, 0, 0.08);
    }

    svg {
      filter: drop-shadow(0px 2px 4px rgba(0, 0, 0, 0.16)) drop-shadow(0px 2px 8px rgba(0, 0, 0, 0.12)) drop-shadow(0px 2px 12px rgba(0, 0, 0, 0.08));

      @media (max-width:$mobile-viewport) {
        width: 300px;
        height: 92px;
        max-width: calc(100% - 32px);
      }
    }
  }

  p.large-paragraph, span.description {
    text-shadow: $text-shadow;
  }

  .line {
    font-size: inherit !important;
    text-align: center;
    font-weight: 100;
    color: #fff;
  }
}

#get-involved-cards {
  @media (max-width:$mobile-viewport) {
    padding: 8vh 0;
  }
}

#get-involved-text {
  .line:last-of-type {
    margin-top: 24px;
  }
}

#get-involved-earth {
  gap: 3dvh;

  h2, p, span:not(.split-char) {
    text-align: center;
  }

  h2 {
    font-weight: 900;
    //text-shadow:$text-shadow;
  }

  span.description {
    display: block;
    font-size: 1.5vw;
    font-weight: 120;
    line-height: 1.4;
    max-width: 66.5vw;

    @media (max-width:$desktop-viewport) {
      font-size: 2.5vw;
      max-width: 82vw;
    }

    @media (max-width:$mobile-viewport) {
      font-size: 4.75vw;
      max-width: calc(100vw - 32px);
    }
  }
}



#events {
  margin-bottom: -6vh;

  @media (max-width:$mobile-viewport) {
    margin-bottom: 0;
  }
}


.years {
  position: relative;
  color: #fff;
  font-size: 10vw;
  text-align: center;
  font-weight: 100;
}



#anniversary-number {
  font-size: 14vw;
  font-weight: 900;
  white-space: nowrap;
}






/* Added custom style to position #anniversary-area at the bottom of #years-travel-area */
#anniversary-area {
  margin-top: auto;
  overflow: hidden;

  #marquee {
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 2;

    span {
      white-space: nowrap;
      font-size: 8vw;
      line-height: 1;
      font-weight: 900;
      font-style: italic;
      color: #fff;
      mix-blend-mode: difference;
    }
  }
}


//Dat.GUI

html {
  .dg.ac {
    z-index: 9999999;

    li.has-slider {
      max-height: 20px;
    }

    span.property-name {
      font-size: 9px;
      line-height: 2;
    }

    input[type="text"] {
      max-height: 12px;
    }

    div.slider {
      max-height: 12px;
    }

    .color {
      input {
        max-height: 20px;
      }
    }

    // Fix for collapsible folder titles
    .title {
      cursor: pointer;
      pointer-events: auto !important;
    }

    .closed .title {
      background-position: 5px center !important;
    }

    .cr.boolean {
      position: relative;
      height: 27px;
      display: flex;
      align-items: center;

      >div {
        width: 100%;
      }

      // Improve boolean checkbox visibility
      .property-name {
        display: flex;
        align-items: center;
        white-space: nowrap;
      }

      .c {
        width: 16px;
        height: 16px;
        position: relative;
      }

      // Style for the checkbox
      input[type="checkbox"] {
        appearance: none;
        -webkit-appearance: none;
        width: 16px;
        height: 16px;
        border: 1px solid #aaa;
        border-radius: 3px;
        background-color: #303030;
        position: absolute;
        cursor: pointer;
        margin: 0;
        vertical-align: middle;

        &:checked {
          background-color: #25e5ff;
          border-color: #25e5ff;

          &:after {
            content: '✓';
            position: absolute;
            color: #000;
            font-size: 12px;
            font-weight: bold;
            top: 0px;
            left: 3px;
            height: 16px;
            line-height: 1.4;
          }
        }

        &:focus {
          outline: none;
          box-shadow: 0 0 0 2px rgba(37, 229, 255, 0.5);
        }
      }
    }

    .cr.function {
      height: 27px;
    }

    // Improve hover states for all controls
    .cr:hover {
      //background-color: rgba(255, 255, 255, 0.1);
    }

    // Active control highlighting
    .cr.active {
      //background-color: rgba(37, 229, 255, 0.2);
    }
  }
}